plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'io.github'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url 'https://github.com/javaterminal/terminalfx/raw/master/releases' }
    maven { url 'https://packages.jetbrains.team/maven/p/ij/intellij-dependencies' }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'io.github.railroad.Startup'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.swing', 'javafx.web', 'javafx.fxml', 'javafx.graphics', 'javafx.media']
}

dependencies {
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'
    implementation 'org.jetbrains:annotations:24.1.0'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'
    implementation 'org.json:json:20240303'
    implementation 'io.github.palexdev:materialfx:11.17.0'
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    implementation 'org.apache.groovy:groovy-all:5.0.0-alpha-9'
    implementation 'org.gradle:gradle-tooling-api:8.9'
    implementation 'com.panemu:tiwulfx-dock:0.3'
    implementation 'com.spencerwi:Either.java:2.9.0'
    implementation 'com.kodedu.terminalfx:terminalfx:1.2.0'
    implementation 'org.fxmisc.richtext:richtextfx:0.11.3'
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.26.1'
    implementation 'io.github.bonede:tree-sitter:0.22.6a'
    implementation 'io.github.bonede:tree-sitter-java:0.21.0a'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.ow2.asm:asm:9.8'
    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.41.0'
    implementation 'com.github.erosb:everit-json-schema:1.14.6'
    implementation 'org.apache.commons:commons-compress:1.27.1'

    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    compileOnly 'org.projectlombok:lombok:1.18.32'
}

jar {
    manifest {
        attributes(
                "Implementation-Title": "Railroad",
                "Implementation-Version": "1.0-alpha",
                "Main-Class": "io.github.railroad.Startup"
        )
    }
}

shadowJar {
    zip64 true
    mergeServiceFiles()
    archiveClassifier = '' // This makes shadowJar the default jar
}

// Configure jpackage to use the shadow jar
tasks.register('jpackageImage', Exec) {
    dependsOn shadowJar

    def inputDir = file("${layout.buildDirectory.get()}/libs")
    def outputDir = file("${layout.buildDirectory.get()}/jpackage")

    commandLine 'jpackage',
            '--input', inputDir,
            '--dest', outputDir,
            '--name', 'Railroad',
            '--main-jar', shadowJar.archiveFileName.get(),
            '--main-class', 'io.github.railroad.Startup',
            '--type', 'app-image',
            '--java-options', '-Xmx2048m'
}

tasks.register('jpackageInstaller', Exec) {
    dependsOn jpackageImage

    def outputDir = file("${layout.buildDirectory}/jpackage")

    commandLine 'jpackage',
            '--app-image', "${outputDir}/Railroad",
            '--dest', outputDir,
            '--name', 'Railroad',
            '--app-version', '1.0.0',
            '--vendor', 'Railroad Team',
            '--description', 'Railroad Application'

    // Add platform-specific options
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        args '--win-dir-chooser', '--win-menu', '--win-shortcut'
    } else if (System.getProperty('os.name').toLowerCase().contains('mac')) {
        args '--mac-package-name', 'Railroad'
    }
}

// Make build depend on shadowJar instead of jar
build.dependsOn shadowJar
